{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation","text":""},{"location":"#cloud-native-gis","title":"Cloud Native GIS","text":""},{"location":"#overview","title":"Overview","text":"<p>Cloud Native GIS is a platform for handling layers and served on map.</p>"},{"location":"#key-concepts","title":"Key Concepts","text":"<p>Layer can be in vector and raster and being served as tile.</p> <p>Style is saved in database. Vector layer is in mapbox style.</p> <p>Maputnik is being used to change the style.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"The software provided by this project is provided 'as is'. All information provided  within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may  occur as a result of the use of this platform."},{"location":"#releases","title":"Releases","text":"<p>Our releases are published on our GitHub releases page</p> Project Badges"},{"location":"#project-chatroom","title":"Project Chatroom","text":"<p>We do not yet have a Chatroom set up for this project. Please use the GitHub issue tracker for discussions rather.</p>"},{"location":"#contributor-license-agreement-cla","title":"Contributor License Agreement (CLA)","text":"<p>Contributions to this project will be subject to our Contributor License Agreement (Coming soon)</p>"},{"location":"#license","title":"License","text":"<p>This project is open source, published under the AGPL-3.  You can read our license to find out what rights this license bestows to users and contributors.</p> <p>License</p>"},{"location":"quick_installation/","title":"Quick installation","text":""},{"location":"quick_installation/#quick-installation","title":"Quick installation","text":""},{"location":"quick_installation/#production","title":"Production","text":"<pre><code>git submodule update\ngit clone https://github.com/kartoza/CloudNativeGIS\ncp deployment/.template.env deployment/.env\ncp deployment/docker-compose.override.template deployment/docker-compose.template\nmake up\n</code></pre> <p>The web will be available at <code>http://127.0.0.1/</code></p> <p>To stop containers:</p> <pre><code>make kill\n</code></pre> <p>To stop and delete containers:</p> <pre><code>make down\n</code></pre>"},{"location":"quick_installation/#install-as-django-library","title":"Install as django library","text":"<p>This application can be installed as django library.</p> <p>To install it, put <code>git+https://github.com/kartoza/CloudNativeGIS.git</code> to requirements. Add <code>cloud_native_gis</code> to INSTALLED_APPS, and add url <code>path('', include('cloud_native_gis.urls'))</code>.</p>"},{"location":"quick_installation/#development","title":"Development","text":"<pre><code>git submodule update\ngit clone https://github.com/kartoza/CloudNativeGIS\ncp deployment/.template.env deployment/.env\ncp deployment/docker-compose.override.template deployment/docker-compose.template\n</code></pre> <p>After that, do</p> <ul> <li>open new terminal</li> <li>on folder root of project, do</li> </ul> <pre><code>make serve\n</code></pre> <p>Wait until it is done when there is sentence \"webpack xxx compiled successfully in xxx ms\". After that, don't close the terminal. If it is accidentally closed, do <code>make serve</code> again</p> <p>Next step:</p> <ul> <li>Open new terminal</li> <li>Do commands below</li> </ul> <pre><code>make up\nmake dev\n</code></pre> <p>Wait until it is on.</p> <p>The web can be accessed using <code>http://localhost:5000/</code></p> <p>If the web is taking long time to load, restart cloud_native_gis_dev_1 container. The sequence should be <code>make dev</code>, after that run or restart cloud_native_gis_dev_1.</p>"},{"location":"quick_installation/#maputnik-updates","title":"Maputnik updates","text":"<p>CloudNativeGIS using maputnik to edit style. We could update maputnik in the folder root/maputnik. Maputnik can be accessed in the django-admin and layers, and there is \"editor\" column that will be redirect to maputnik instance. By default, it is using maputnik production.</p> <p>To change and test maputnik:</p> <pre><code>make serve-maputnik\n</code></pre> <p>After it is done, there will be link to maputnik. Copy the link and paste in: go to deployment/.env change MAPUTNIK_URL to the copied link</p> <pre><code>restart dev container\n</code></pre> <p>After done, we need to update the maputnik production. First, create commit of maputnik and push it to repo. Then</p> <pre><code>make build-maputnik\n</code></pre> <p>It will create files in the django_project/cloud_native_gis/templates/maputnik.html and also assets in the django_project/cloud_native_gis/static</p> <p>After that, test it by remove MAPUTNIK_URL and restart dev container. If satisfied, just create commit for the changes.</p>"},{"location":"developer/","title":"Documentation","text":""},{"location":"developer/#for-developers","title":"For Developers","text":"<p>This is the homepage for all developer related documentation.</p>"},{"location":"developer/manual/","title":"Index","text":"<p>title: Automatically Generated Python Documentation summary: DO NOT EDIT THIS FILE MANUALLY : It is created during the mkdocs build process date: 2023-08-03</p>"},{"location":"developer/manual/#python-reference-manual","title":"Python Reference Manual","text":""}]}